<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
             http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">
    <persistence-unit name="manager1" transaction-type="RESOURCE_LOCAL">
        <class>sample.Book</class>
        <class>sample.Publication</class>
        <class>sample.Post</class>
        <class>sample.PostComment</class>

        <properties>
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="password"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/hibernate_test"/>
            <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
            <property name="hibernate.max_fetch_depth" value="3"/>


            <!-- cache configuration -->
            <!--<property name="hibernate.ejb.classcache.org.hibernate.ejb.test.Item" value="read-write"/>-->
            <!--<property name="hibernate.ejb.collectioncache.org.hibernate.ejb.test.Item.distributors"-->
                      <!--value="read-write, RegionName"/>-->

            <!-- alternatively to <class> and <property> declarations, you can use a regular hibernate.cfg.xml file -->
            <!-- property name="hibernate.ejb.cfgfile" value="/org/hibernate/ejb/test/hibernate.cfg.xml"/ -->
        </properties>
    </persistence-unit>
</persistence>